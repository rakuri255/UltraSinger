"""Tests for pitcher.py"""

import os
import unittest
import src.modules.Pitcher.pitcher as test_subject

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.cluster import KMeans
from sklearn import preprocessing as p
from sklearn.decomposition import PCA

import pytest
from src.modules.plot import plot


class PitcherTest(unittest.TestCase):
    # @pytest.mark.skip(reason="Skipping this FUNCTION level test, can be used for manual tests")
    def test_get_pitch_with_crepe_file(self):
        # Arrange
        test_dir = os.path.dirname(os.path.abspath(__file__))
        root_dir = os.path.abspath(test_dir + "/../../..")
        # test_file_abs_path = os.path.abspath(root_dir + "/test_input/audio_denoised.wav")
        test_file_abs_path = os.path.abspath(root_dir + "/test_input/test_denoised.wav")
        test_output = root_dir + "/test_output"

        # Act
        pitched_data = test_subject.get_pitch_with_crepe_file(test_file_abs_path, 'full', device="cuda")
        # test_subject.get_pitch_with_crepe_file(test_file_abs_path, 'full', 'cpu', batch_size=1024)
        plot(pitched_data, test_output, title="pitching test")

        print("done")

    
    # @pytest.mark.skip(reason="Skipping this FUNCTION level test, can be used for manual tests")
    def test_pitch_clustering(self):
        # Arrange
        times = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.5, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57, 0.58, 0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1, 1.01, 1.02, 1.03, 1.04, 1.05, 1.06, 1.07, 1.08, 1.09, 1.1, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.2, 1.21, 1.22, 1.23, 1.24, 1.25, 1.26, 1.27, 1.28, 1.29, 1.3, 1.31, 1.32, 1.33, 1.34, 1.35, 1.36, 1.37, 1.38, 1.39, 1.4, 1.41, 1.42, 1.43, 1.44, 1.45, 1.46, 1.47, 1.48, 1.49, 1.5, 1.51, 1.52, 1.53, 1.54, 1.55, 1.56, 1.57, 1.58, 1.59, 1.6, 1.61, 1.62, 1.63, 1.64, 1.65, 1.66, 1.67, 1.68, 1.69, 1.7, 1.71, 1.72, 1.73, 1.74, 1.75, 1.76, 1.77, 1.78, 1.79, 1.8, 1.81, 1.82, 1.83, 1.84, 1.85, 1.86, 1.87, 1.88, 1.89, 1.9, 1.91, 1.92, 1.93, 1.94, 1.95, 1.96, 1.97, 1.98, 1.99, 2, 2.01, 2.02, 2.03, 2.04, 2.05, 2.06, 2.07, 2.08, 2.09, 2.1, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.2, 2.21, 2.22, 2.23, 2.24, 2.25, 2.26, 2.27, 2.28, 2.29, 2.3, 2.31, 2.32, 2.33, 2.34, 2.35, 2.36, 2.37, 2.38, 2.39, 2.4, 2.41, 2.42, 2.43, 2.44, 2.45, 2.46, 2.47, 2.48, 2.49, 2.5, 2.51, 2.52, 2.53, 2.54, 2.55, 2.56, 2.57, 2.58, 2.59, 2.6, 2.61, 2.62, 2.63, 2.64, 2.65, 2.66, 2.67, 2.68, 2.69, 2.7, 2.71, 2.72, 2.73, 2.74, 2.75, 2.76, 2.77, 2.78, 2.79, 2.8, 2.81, 2.82, 2.83, 2.84, 2.85, 2.86, 2.87, 2.88, 2.89, 2.9, 2.91, 2.92, 2.93, 2.94, 2.95, 2.96, 2.97, 2.98, 2.99, 3, 3.01, 3.02, 3.03, 3.04, 3.05, 3.06, 3.07, 3.08, 3.09, 3.1, 3.11, 3.12, 3.13, 3.14, 3.15, 3.16, 3.17, 3.18, 3.19, 3.2, 3.21, 3.22, 3.23, 3.24, 3.25, 3.26, 3.27, 3.28, 3.29, 3.3, 3.31, 3.32, 3.33, 3.34, 3.35, 3.36, 3.37, 3.38, 3.39, 3.4, 3.41, 3.42, 3.43, 3.44, 3.45, 3.46, 3.47, 3.48, 3.49, 3.5, 3.51, 3.52, 3.53, 3.54, 3.55, 3.56, 3.57, 3.58, 3.59, 3.6, 3.61, 3.62, 3.63, 3.64, 3.65, 3.66, 3.67, 3.68, 3.69, 3.7, 3.71, 3.72, 3.73, 3.74, 3.75, 3.76, 3.77, 3.78, 3.79, 3.8, 3.81, 3.82, 3.83, 3.84, 3.85, 3.86, 3.87, 3.88, 3.89, 3.9, 3.91, 3.92, 3.93, 3.94, 3.95, 3.96, 3.97, 3.98, 3.99, 4, 4.01, 4.02, 4.03, 4.04, 4.05, 4.06, 4.07, 4.08, 4.09, 4.1, 4.11, 4.12, 4.13, 4.14, 4.15, 4.16, 4.17, 4.18, 4.19, 4.2, 4.21, 4.22, 4.23, 4.24, 4.25, 4.26, 4.27, 4.28, 4.29, 4.3, 4.31, 4.32, 4.33, 4.34, 4.35, 4.36, 4.37, 4.38, 4.39, 4.4, 4.41, 4.42, 4.43, 4.44, 4.45, 4.46, 4.47, 4.48, 4.49, 4.5, 4.51, 4.52, 4.53, 4.54, 4.55, 4.56, 4.57, 4.58, 4.59, 4.6, 4.61, 4.62, 4.63, 4.64, 4.65, 4.66, 4.67, 4.68, 4.69, 4.7, 4.71, 4.72, 4.73, 4.74, 4.75, 4.76, 4.77, 4.78, 4.79, 4.8, 4.81, 4.82, 4.83, 4.84, 4.85, 4.86, 4.87, 4.88, 4.89, 4.9, 4.91, 4.92, 4.93, 4.94, 4.95, 4.96, 4.97, 4.98, 4.99, 5, 5.01, 5.02, 5.03, 5.04, 5.05, 5.06, 5.07, 5.08, 5.09, 5.1, 5.11, 5.12, 5.13, 5.14, 5.15, 5.16, 5.17, 5.18, 5.19, 5.2, 5.21, 5.22, 5.23, 5.24, 5.25, 5.26, 5.27, 5.28, 5.29, 5.3, 5.31, 5.32, 5.33, 5.34, 5.35, 5.36, 5.37, 5.38, 5.39, 5.4, 5.41, 5.42, 5.43, 5.44, 5.45, 5.46, 5.47, 5.48, 5.49, 5.5, 5.51, 5.52, 5.53, 5.54, 5.55, 5.56, 5.57, 5.58, 5.59, 5.6, 5.61, 5.62, 5.63, 5.64, 5.65, 5.66, 5.67, 5.68, 5.69, 5.7, 5.71, 5.72, 5.73, 5.74, 5.75, 5.76, 5.77, 5.78, 5.79, 5.8, 5.81, 5.82, 5.83, 5.84, 5.85, 5.86, 5.87, 5.88, 5.89, 5.9, 5.91, 5.92, 5.93, 5.94, 5.95, 5.96, 5.97, 5.98, 5.99, 6, 6.01, 6.02, 6.03, 6.04, 6.05, 6.06, 6.07, 6.08, 6.09, 6.1, 6.11, 6.12, 6.13, 6.14, 6.15, 6.16, 6.17, 6.18, 6.19, 6.2, 6.21, 6.22, 6.23, 6.24, 6.25, 6.26, 6.27, 6.28, 6.29, 6.3, 6.31, 6.32, 6.33, 6.34, 6.35, 6.36, 6.37, 6.38, 6.39, 6.4, 6.41, 6.42, 6.43, 6.44, 6.45, 6.46, 6.47, 6.48, 6.49, 6.5, 6.51, 6.52, 6.53, 6.54, 6.55, 6.56, 6.57, 6.58, 6.59, 6.6, 6.61, 6.62, 6.63, 6.64, 6.65, 6.66, 6.67, 6.68, 6.69, 6.7, 6.71, 6.72, 6.73, 6.74, 6.75, 6.76, 6.77, 6.78, 6.79, 6.8, 6.81, 6.82, 6.83, 6.84, 6.85, 6.86, 6.87, 6.88, 6.89, 6.9, 6.91, 6.92, 6.93, 6.94, 6.95, 6.96, 6.97, 6.98, 6.99, 7, 7.01, 7.02, 7.03, 7.04, 7.05, 7.06, 7.07, 7.08, 7.09, 7.1, 7.11, 7.12, 7.13, 7.14, 7.15, 7.16, 7.17, 7.18, 7.19, 7.2, 7.21, 7.22, 7.23, 7.24, 7.25, 7.26, 7.27, 7.28, 7.29, 7.3, 7.31, 7.32, 7.33, 7.34, 7.35, 7.36, 7.37, 7.38, 7.39, 7.4, 7.41, 7.42, 7.43, 7.44, 7.45, 7.46, 7.47, 7.48, 7.49, 7.5, 7.51, 7.52, 7.53, 7.54, 7.55, 7.56, 7.57, 7.58, 7.59, 7.6, 7.61, 7.62, 7.63, 7.64, 7.65, 7.66, 7.67, 7.68, 7.69, 7.7, 7.71, 7.72, 7.73, 7.74, 7.75, 7.76, 7.77, 7.78, 7.79, 7.8, 7.81, 7.82, 7.83, 7.84, 7.85, 7.86, 7.87, 7.88, 7.89, 7.9, 7.91, 7.92, 7.93, 7.94, 7.95, 7.96, 7.97, 7.98, 7.99, 8, 8.01, 8.02, 8.03, 8.04, 8.05, 8.06, 8.07, 8.08, 8.09, 8.1, 8.11, 8.12, 8.13, 8.14, 8.15, 8.16, 8.17, 8.18, 8.19, 8.2, 8.21, 8.22, 8.23, 8.24, 8.25, 8.26, 8.27, 8.28, 8.29, 8.3, 8.31, 8.32, 8.33, 8.34, 8.35, 8.36, 8.37, 8.38, 8.39, 8.4, 8.41, 8.42, 8.43]
        frequencies = [665.03, 659.52, 646.07, 572.62, 590.38, 649.3, 600.02, 624.6, 646.16, 650.34, 646.06, 651.35, 650.49, 589.08, 603.26, 625.12, 627.36, 636.09, 660.45, 659.91, 648.32, 657.78, 597.3, 595.76, 594.63, 659.18, 625.98, 645.65, 645.76, 650.01, 652.28, 653.14, 664.93, 662.59, 660.76, 642.67, 644.79, 649.94, 625.44, 627.31, 645.4, 645.22, 652.12, 598.35, 623.99, 644.58, 645.09, 650.61, 650.01, 598.85, 656.88, 636.74, 652.16, 650.66, 649.87, 657.12, 625.48, 634.35, 661.24, 651.33, 655.77, 658.05, 661.75, 660.07, 661.37, 662.0, 662.29, 662.33, 664.63, 661.54, 661.31, 630.51, 590.5, 658.83, 625.16, 635.46, 661.08, 659.04, 659.97, 666.0, 670.29, 666.15, 658.62, 662.12, 662.78, 656.71, 662.49, 661.36, 641.94, 647.05, 652.86, 598.11, 599.27, 656.18, 625.69, 659.14, 657.94, 659.05, 657.8, 656.69, 653.63, 638.82, 631.24, 625.38, 635.76, 658.93, 657.88, 660.1, 660.92, 613.83, 593.21, 608.63, 624.15, 633.75, 659.97, 658.17, 657.64, 590.49, 651.47, 656.66, 657.47, 637.08, 658.92, 659.45, 590.42, 592.88, 592.52, 596.55, 657.24, 660.3, 634.03, 635.35, 647.72, 648.55, 648.52, 647.42, 645.35, 648.98, 653.16, 650.04, 656.79, 644.61, 646.96, 648.74, 646.2, 642.01, 632.67, 698.0, 660.9, 635.71, 637.32, 646.88, 645.85, 644.92, 647.01, 646.71, 645.62, 645.52, 653.7, 660.06, 626.52, 646.6, 652.7, 653.21, 597.68, 658.95, 660.67, 636.1, 657.82, 659.44, 653.16, 652.2, 657.95, 660.01, 627.14, 636.14, 644.73, 649.03, 651.96, 662.32, 675.07, 679.81, 683.4, 692.69, 699.38, 695.89, 697.21, 698.53, 700.52, 704.75, 707.07, 691.78, 682.75, 677.22, 669.76, 660.38, 656.93, 645.32, 643.54, 647.62, 592.21, 658.68, 658.62, 660.63, 634.49, 642.43, 654.18, 659.81, 671.21, 678.8, 684.99, 690.6, 648.73, 598.17, 658.13, 659.56, 690.23, 642.85, 647.82, 648.53, 650.73, 647.39, 645.03, 647.35, 650.27, 649.18, 647.71, 646.93, 646.93, 640.58, 636.02, 632.72, 626.74, 619.02, 612.84, 597.52, 632.17, 663.0, 690.65, 643.34, 653.35, 647.88, 653.15, 652.6, 658.93, 658.99, 659.11, 658.06, 659.11, 660.6, 641.79, 610.65, 598.81, 659.95, 635.14, 660.15, 662.85, 651.13, 635.97, 658.73, 658.91, 659.11, 690.8, 695.01, 683.24, 681.22, 674.65, 663.59, 659.06, 649.47, 640.65, 632.87, 624.67, 645.13, 661.67, 646.04, 647.7, 651.95, 652.31, 659.4, 692.03, 635.43, 628.9, 624.13, 604.23, 597.85, 624.24, 624.9, 645.21, 645.66, 646.12, 649.43, 598.26, 657.7, 635.79, 652.29, 657.12, 659.24, 654.06, 646.01, 645.04, 584.87, 532.52, 537.38, 470.4, 419.16, 376.77, 331.49, 300.82, 266.99, 235.5, 208.51, 187.03, 166.8, 145.7, 128.59, 114.6, 111.88, 111.34, 111.4, 112.1, 112.58, 112.77, 112.31, 111.91, 111.61, 111.35, 111.24, 111.36, 111.71, 112.28, 112.58, 112.6, 112.72, 112.64, 112.59, 112.58, 112.61, 112.7, 112.64, 112.4, 112.35, 112.19, 112.12, 112.28, 112.71, 113.53, 114.07, 114.72, 115.76, 116.9, 118.35, 120.27, 122.07, 123.86, 125.5, 127.17, 128.75, 130.15, 130.75, 131.19, 131.61, 132.12, 132.39, 132.65, 133.09, 133.35, 133.27, 133.47, 133.67, 133.72, 134.03, 134.05, 133.88, 133.98, 133.74, 133.51, 133.39, 133.18, 132.97, 132.75, 132.42, 132.22, 132.33, 132.47, 132.95, 133.73, 134.7, 136.04, 137.57, 138.72, 140.38, 142.22, 144.34, 146.13, 147.59, 149.4, 151.91, 154.03, 155.77, 157.2, 158.19, 158.3, 157.86, 157.38, 156.9, 156.33, 155.93, 155.5, 155.25, 155.1, 154.86, 154.75, 154.79, 154.81, 154.89, 154.93, 154.99, 155.17, 155.21, 155.27, 155.36, 155.26, 155.27, 155.32, 155.59, 155.95, 157.1, 159.24, 161.65, 163.48, 165.11, 166.87, 169.52, 172.43, 174.91, 177.59, 180.13, 182.91, 185.0, 186.43, 187.73, 188.14, 188.07, 187.49, 186.78, 186.54, 186.58, 186.74, 186.89, 186.78, 186.7, 186.94, 187.54, 188.14, 188.32, 188.13, 187.78, 187.68, 187.78, 187.92, 188.01, 187.96, 188.35, 189.13, 190.21, 190.87, 191.13, 190.8, 190.31, 189.41, 188.83, 188.26, 187.96, 187.35, 186.75, 186.32, 185.88, 185.66, 185.5, 185.51, 185.99, 186.39, 187.09, 187.52, 187.75, 187.83, 188.01, 188.66, 189.73, 190.58, 190.67, 190.03, 189.38, 188.8, 188.28, 188.16, 188.06, 187.99, 187.94, 187.91, 188.05, 188.52, 189.14, 189.76, 190.26, 190.42, 190.45, 190.43, 190.29, 190.09, 189.81, 189.93, 189.84, 189.58, 189.03, 188.63, 188.51, 188.85, 189.62, 190.32, 190.56, 190.57, 190.23, 189.8, 189.29, 189.1, 188.58, 187.76, 185.73, 183.73, 179.79, 174.77, 167.02, 164.36, 163.86, 164.43, 165.23, 166.1, 166.97, 167.8, 168.58, 169.3, 169.57, 169.86, 169.71, 169.03, 168.81, 168.58, 168.81, 169.13, 169.9, 170.26, 170.77, 171.23, 171.33, 171.52, 171.68, 171.48, 170.94, 170.4, 169.77, 169.56, 169.39, 169.32, 169.49, 169.51, 169.93, 170.61, 171.28, 171.92, 172.58, 172.45, 172.17, 172.0, 171.76, 171.48, 171.1, 170.78, 170.49, 170.16, 170.08, 170.66, 171.31, 172.1, 172.42, 172.75, 173.04, 173.32, 173.54, 173.76, 173.83, 173.66, 173.12, 172.18, 170.25, 166.95, 164.22, 159.63, 153.98, 149.11, 147.08, 147.28, 147.78, 148.69, 149.42, 149.85, 150.08, 150.11, 150.21, 150.23, 150.26, 150.09, 149.83, 149.6, 149.44, 149.46, 149.45, 149.46, 149.54, 149.83, 150.41, 151.16, 152.16, 152.9, 153.67, 154.13, 154.6, 154.88, 155.06, 155.09, 154.94, 154.86, 154.6, 154.1, 153.51, 152.86, 152.64, 152.4, 152.49, 152.71, 152.89, 153.26, 153.54, 154.2, 154.68, 155.2, 155.77, 156.31, 156.93, 157.24, 157.01, 157.61, 156.31, 170.0, 193.15, 209.91, 234.64, 255.53, 284.74, 306.29, 333.92, 377.15, 401.52, 448.67, 492.14, 535.32, 591.44, 589.15, 595.15, 607.96, 625.84, 636.75, 646.5, 644.68, 652.56, 658.79, 649.39, 631.42, 633.55, 645.17, 644.46, 649.97, 581.36, 581.38, 590.79, 601.73, 592.23, 591.62, 594.09, 633.63, 633.25, 627.58, 658.55, 663.0, 662.13, 648.45, 640.45, 634.05, 645.37, 659.85, 662.4, 667.63, 668.55, 662.2, 662.92, 661.72, 657.75, 653.06, 640.97, 628.55, 626.07, 629.33, 628.84, 635.41, 635.19, 645.97, 650.58, 655.78, 657.31, 657.48, 646.94, 645.51, 651.18, 655.65, 627.13, 647.02, 652.56, 651.73, 643.98, 649.71, 659.13, 689.11, 672.49, 653.14, 646.99, 647.11, 599.3, 624.89, 626.45, 634.17, 646.55, 653.63, 658.17, 662.79, 683.29, 691.02, 635.07, 615.7, 598.63, 616.46, 633.13, 658.27, 643.39, 647.15, 650.84, 656.71, 625.19, 646.25, 657.19, 647.88, 634.7, 636.86, 646.4, 649.72, 596.76, 597.36, 656.17, 626.22, 644.55, 644.42, 651.81, 625.18, 626.33, 634.01, 644.88, 651.92, 595.9, 652.5, 623.37, 656.65, 646.16, 645.91, 651.86, 596.94, 656.35, 658.52, 635.42, 652.11, 660.49, 590.83, 603.91, 613.4, 632.95, 646.0, 658.46, 646.69, 647.74, 590.35, 591.16, 650.7, 596.67, 657.69, 660.8, 689.3, 636.49, 658.31, 647.31, 645.17, 645.15, 649.0, 657.39, 636.03, 647.63, 657.81, 591.34, 596.66, 656.91, 658.68, 641.36, 648.52, 659.13, 590.37, 591.02, 650.28, 656.05, 624.6, 657.67, 652.16, 650.86, 650.79, 657.52, 634.04, 641.58, 645.91, 658.51, 625.29, 634.09, 645.1, 642.77, 634.01, 626.52, 645.07, 650.76101509]
        frequencies_log_10 = [freq * 10 for freq in np.log10(frequencies)]
        confidence = [0.04, 0.044, 0.109, 0.033, 0.094, 0.078, 0.085, 0.093, 0.099, 0.125, 0.156, 0.168, 0.094, 0.153, 0.063, 0.06, 0.095, 0.119, 0.121, 0.04, 0.098, 0.102, 0.076, 0.089, 0.076, 0.058, 0.075, 0.089, 0.139, 0.157, 0.144, 0.095, 0.032, 0.041, 0.094, 0.124, 0.112, 0.103, 0.104, 0.113, 0.096, 0.177, 0.149, 0.086, 0.079, 0.088, 0.134, 0.111, 0.071, 0.082, 0.097, 0.109, 0.149, 0.142, 0.154, 0.132, 0.117, 0.071, 0.071, 0.10, 0.098, 0.106, 0.087, 0.103, 0.067, 0.069, 0.078, 0.094, 0.303, 0.365, 0.056, 0.014, 0.037, 0.068, 0.106, 0.097, 0.09, 0.092, 0.034, 0.078, 0.028, 0.037, 0.016, 0.009, 0.042, 0.042, 0.041, 0.06, 0.115, 0.151, 0.132, 0.103, 0.092, 0.094, 0.08, 0.106, 0.138, 0.083, 0.077, 0.233, 0.273, 0.074, 0.073, 0.106, 0.103, 0.117, 0.081, 0.084, 0.051, 0.08, 0.036, 0.027, 0.047, 0.108, 0.085, 0.117, 0.099, 0.085, 0.084, 0.092, 0.105, 0.104, 0.086, 0.14, 0.083, 0.04, 0.083, 0.057, 0.08, 0.083, 0.058, 0.106, 0.089, 0.095, 0.046, 0.034, 0.039, 0.138, 0.23, 0.628, 0.397, 0.106, 0.036, 0.034, 0.039, 0.048, 0.056, 0.067, 0.066, 0.047, 0.022, 0.078, 0.04, 0.026, 0.028, 0.069, 0.061, 0.105, 0.056, 0.056, 0.085, 0.097, 0.093, 0.093, 0.075, 0.061, 0.066, 0.10, 0.102, 0.147, 0.093, 0.083, 0.088, 0.083, 0.069, 0.051, 0.04, 0.05, 0.133, 0.075, 0.051, 0.051, 0.108, 0.229, 0.038, 0.03, 0.052, 0.043, 0.068, 0.056, 0.081, 0.131, 0.104, 0.072, 0.056, 0.098, 0.025, 0.047, 0.074, 0.063, 0.068, 0.067, 0.072, 0.084, 0.085, 0.105, 0.051, 0.047, 0.04, 0.116, 0.038, 0.073, 0.037, 0.072, 0.087, 0.083, 0.08, 0.081, 0.075, 0.057, 0.076, 0.046, 0.038, 0.015, 0.03, 0.259, 0.571, 0.455, 0.101, 0.131, 0.033, 0.08, 0.069, 0.094, 0.111, 0.046, 0.037, 0.042, 0.046, 0.083, 0.108, 0.129, 0.101, 0.083, 0.062, 0.091, 0.095, 0.105, 0.123, 0.046, 0.046, 0.045, 0.048, 0.075, 0.07, 0.064, 0.032, 0.045, 0.069, 0.058, 0.091, 0.096, 0.051, 0.028, 0.04, 0.021, 0.048, 0.067, 0.102, 0.071, 0.019, 0.041, 0.048, 0.084, 0.075, 0.108, 0.122, 0.108, 0.087, 0.088, 0.051, 0.079, 0.042, 0.016, 0.028, 0.09, 0.105, 0.084, 0.073, 0.122, 0.125, 0.073, 0.07, 0.099, 0.094, 0.137, 0.112, 0.068, 0.023, 0.069, 0.087, 0.04, 0.079, 0.026, 0.092, 0.027, 0.05, 0.12, 0.112, 0.094, 0.063, 0.041, 0.129, 0.758, 0.529, 0.106, 0.117, 0.432, 0.798, 0.908, 0.898, 0.879, 0.889, 0.89, 0.919, 0.926, 0.923, 0.918, 0.921, 0.916, 0.893, 0.891, 0.893, 0.899, 0.901, 0.904, 0.897, 0.891, 0.895, 0.892, 0.887, 0.893, 0.909, 0.916, 0.902, 0.889, 0.889, 0.918, 0.911, 0.937, 0.936, 0.912, 0.895, 0.915, 0.926, 0.891, 0.884, 0.893, 0.90, 0.934, 0.943, 0.942, 0.925, 0.924, 0.936, 0.945, 0.931, 0.937, 0.931, 0.938, 0.94, 0.952, 0.949, 0.942, 0.95, 0.941, 0.929, 0.936, 0.937, 0.945, 0.95, 0.932, 0.927, 0.938, 0.935, 0.945, 0.945, 0.94, 0.902, 0.915, 0.912, 0.88, 0.912, 0.915, 0.953, 0.959, 0.933, 0.922, 0.939, 0.955, 0.937, 0.959, 0.956, 0.961, 0.953, 0.938, 0.961, 0.967, 0.959, 0.95, 0.95, 0.951, 0.965, 0.958, 0.958, 0.96, 0.955, 0.955, 0.948, 0.95, 0.951, 0.957, 0.948, 0.956, 0.952, 0.962, 0.966, 0.927, 0.928, 0.936, 0.953, 0.966, 0.942, 0.897, 0.911, 0.923, 0.931, 0.921, 0.935, 0.953, 0.923, 0.932, 0.924, 0.927, 0.94, 0.924, 0.935, 0.929, 0.921, 0.93, 0.922, 0.918, 0.931, 0.94, 0.928, 0.92, 0.919, 0.938, 0.938, 0.935, 0.932, 0.933, 0.932, 0.92, 0.915, 0.928, 0.911, 0.901, 0.916, 0.931, 0.924, 0.903, 0.919, 0.933, 0.939, 0.918, 0.94, 0.953, 0.958, 0.963, 0.964, 0.955, 0.928, 0.93, 0.936, 0.933, 0.935, 0.932, 0.895, 0.929, 0.916, 0.91, 0.93, 0.917, 0.894, 0.918, 0.926, 0.928, 0.933, 0.935, 0.927, 0.929, 0.906, 0.916, 0.924, 0.926, 0.925, 0.917, 0.92, 0.924, 0.928, 0.931, 0.928, 0.93, 0.921, 0.905, 0.90, 0.905, 0.896, 0.921, 0.917, 0.912, 0.909, 0.924, 0.92, 0.916, 0.912, 0.898, 0.928, 0.944, 0.934, 0.815, 0.639, 0.781, 0.924, 0.956, 0.952, 0.976, 0.961, 0.955, 0.949, 0.909, 0.927, 0.935, 0.92, 0.906, 0.915, 0.916, 0.912, 0.927, 0.932, 0.915, 0.90, 0.918, 0.932, 0.941, 0.932, 0.926, 0.934, 0.939, 0.899, 0.906, 0.924, 0.929, 0.927, 0.928, 0.918, 0.901, 0.90, 0.937, 0.931, 0.95, 0.951, 0.934, 0.917, 0.924, 0.942, 0.937, 0.923, 0.918, 0.912, 0.909, 0.912, 0.926, 0.925, 0.943, 0.954, 0.958, 0.958, 0.956, 0.953, 0.953, 0.956, 0.96, 0.925, 0.861, 0.893, 0.864, 0.779, 0.709, 0.846, 0.944, 0.963, 0.957, 0.931, 0.939, 0.93, 0.926, 0.929, 0.929, 0.932, 0.931, 0.927, 0.925, 0.937, 0.936, 0.941, 0.935, 0.94, 0.932, 0.925, 0.931, 0.931, 0.938, 0.944, 0.939, 0.955, 0.958, 0.951, 0.951, 0.946, 0.953, 0.957, 0.96, 0.951, 0.931, 0.941, 0.944, 0.941, 0.942, 0.946, 0.94, 0.936, 0.93, 0.954, 0.954, 0.943, 0.954, 0.938, 0.876, 0.728, 0.592, 0.365, 0.058, 0.025, 0.043, 0.031, 0.041, 0.029, 0.025, 0.012, 0.009, 0.018, 0.029, 0.033, 0.026, 0.018, 0.04, 0.069, 0.045, 0.078, 0.01, 0.064, 0.327, 0.034, 0.012, 0.091, 0.08, 0.082, 0.09, 0.117, 0.148, 0.123, 0.315, 0.07, 0.005, 0.008, 0.039, 0.13, 0.084, 0.081, 0.14, 0.102, 0.053, 0.043, 0.163, 0.067, 0.037, 0.04, 0.058, 0.029, 0.034, 0.03, 0.025, 0.261, 0.122, 0.047, 0.081, 0.047, 0.184, 0.10, 0.177, 0.092, 0.052, 0.032, 0.039, 0.127, 0.084, 0.072, 0.09, 0.125, 0.127, 0.128, 0.118, 0.097, 0.124, 0.114, 0.148, 0.124, 0.081, 0.095, 0.097, 0.11, 0.074, 0.14, 0.117, 0.089, 0.09, 0.089, 0.101, 0.122, 0.128, 0.123, 0.094, 0.062, 0.038, 0.035, 0.064, 0.032, 0.033, 0.045, 0.074, 0.109, 0.126, 0.112, 0.127, 0.093, 0.093, 0.059, 0.091, 0.026, 0.053, 0.10, 0.132, 0.115, 0.065, 0.071, 0.063, 0.081, 0.126, 0.143, 0.125, 0.093, 0.112, 0.102, 0.17, 0.128, 0.077, 0.087, 0.069, 0.061, 0.102, 0.139, 0.143, 0.07, 0.076, 0.124, 0.114, 0.14, 0.099, 0.033, 0.062, 0.056, 0.091, 0.041, 0.112, 0.116, 0.145, 0.077, 0.08, 0.073, 0.074, 0.09, 0.091, 0.105, 0.045, 0.034, 0.164, 0.131, 0.102, 0.082, 0.115, 0.085, 0.149, 0.081, 0.04, 0.064, 0.103, 0.135, 0.09, 0.13, 0.109, 0.071, 0.082, 0.08, 0.088, 0.099, 0.105, 0.133, 0.136, 0.133, 0.117, 0.098, 0.023, 0.105, 0.089, 0.102, 0.029, 0.097, 0.034, 0.076, 0.095, 0.103, 0.15038174]

        matrix = [[times[i], frequencies_log_10[i], confidence[i]] for i, _ in enumerate(times)]
        # Act
        df = pd.DataFrame(matrix)
        df.columns = ['time', 'log 10 frequency', 'confidence']
        df_ss = pd.DataFrame(p.minmax_scale(df))
        df_ss.columns = ['time', 'log 10 frequency', 'confidence']

        # apply custom weight to frequency
        df_ss['log 10 frequency'] = df_ss['log 10 frequency'] / 2

        clusters = 20
        labels = fit_kmeans(df_ss, clusters)
        figure, axis = plt.subplots(2, 2)
        axis[0][0].scatter(df['time'], df['log 10 frequency'], c=labels, cmap='Set1', s=5)
        axis[0][0].set_title("Ratio 1:1:1")

        # apply custom weight to frequency
        df_ss['log 10 frequency'] = df['log 10 frequency'] / 5
        labels = fit_kmeans(df_ss, clusters)
        axis[1][0].scatter(df['time'], df['log 10 frequency'], c=labels, cmap='Set1', s=5)
        axis[1][0].set_title("Ratio 1:5:1")

        # apply custom weight to frequency
        df_ss['confidence'] = df['confidence'] / 100
        labels = fit_kmeans(df_ss, clusters)
        axis[0][1].scatter(df['time'], df['log 10 frequency'], c=labels, cmap='Set1', s=5)
        axis[0][1].set_title("Ratio 1:1:100")

        # apply custom weight to frequency
        df_ss['time'] = df['time'] / 100
        labels = fit_kmeans(df_ss, clusters)
        axis[1][1].scatter(df['time'], df['log 10 frequency'], c=labels, cmap='Set1', s=5)
        axis[1][1].set_title("Ratio 100:1:1")

        figure.set_figwidth(12.8)
        plt.show()
        print("done")


def fit_kmeans(data, centers):
    kmeans = KMeans(centers)
    labels = kmeans.fit_predict(data)
    return labels



if __name__ == "__main__":
    unittest.main()
